// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"
import mock "github.com/stretchr/testify/mock"
import sensors "github.com/kml183/room-environment-monitor/internal/sensors"

// SensorsService is an autogenerated mock type for the SensorsService type
type SensorsService struct {
	mock.Mock
}

// FetchCPUTemp provides a mock function with given fields:
func (_m *SensorsService) FetchCPUTemp() (float32, error) {
	ret := _m.Called()

	var r0 float32
	if rf, ok := ret.Get(0).(func() float32); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(float32)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FetchSensorData provides a mock function with given fields: ctx
func (_m *SensorsService) FetchSensorData(ctx context.Context) (*sensors.SensorData, error) {
	ret := _m.Called(ctx)

	var r0 *sensors.SensorData
	if rf, ok := ret.Get(0).(func(context.Context) *sensors.SensorData); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*sensors.SensorData)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
