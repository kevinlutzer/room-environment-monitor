// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import log "log"
import mock "github.com/stretchr/testify/mock"

// LoggerService is an autogenerated mock type for the LoggerService type
type LoggerService struct {
	mock.Mock
}

// GetStdOut provides a mock function with given fields:
func (_m *LoggerService) GetStdOut() *log.Logger {
	ret := _m.Called()

	var r0 *log.Logger
	if rf, ok := ret.Get(0).(func() *log.Logger); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*log.Logger)
		}
	}

	return r0
}

// StdErr provides a mock function with given fields: fmt, opts
func (_m *LoggerService) StdErr(fmt string, opts ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, fmt)
	_ca = append(_ca, opts...)
	_m.Called(_ca...)
}

// StdOut provides a mock function with given fields: fmt, opts
func (_m *LoggerService) StdOut(fmt string, opts ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, fmt)
	_ca = append(_ca, opts...)
	_m.Called(_ca...)
}

// StdWarn provides a mock function with given fields: fmt, opts
func (_m *LoggerService) StdWarn(fmt string, opts ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, fmt)
	_ca = append(_ca, opts...)
	_m.Called(_ca...)
}
